<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2C390908-D634-4450-9804-71D4929DD392}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SharpBlade</RootNamespace>
    <AssemblyName>SharpBlade</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
    <NuSpecFile>Sharparam.SharpBlade.nuspec</NuSpecFile>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;CONTRACTS_FULL</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DocumentationFile>bin\Debug\SharpBlade.xml</DocumentationFile>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>False</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>3</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <StyleCopTreatErrorsAsWarnings>False</StyleCopTreatErrorsAsWarnings>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE;CONTRACTS_FULL</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DocumentationFile>bin\Release\SharpBlade.xml</DocumentationFile>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>True</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>3</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x86\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;CONTRACTS_FULL</DefineConstants>
    <DocumentationFile>bin\x86\Debug\SharpBlade.xml</DocumentationFile>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>False</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>3</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>bin\x86\Release\</OutputPath>
    <DefineConstants>TRACE;CONTRACTS_FULL</DefineConstants>
    <DocumentationFile>bin\x86\Release\SharpBlade.xml</DocumentationFile>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>True</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>DoNotBuild</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>3</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="log4net, Version=1.2.11.0, Culture=neutral, PublicKeyToken=669e0ddf0bb1aa2a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>$(SolutionDir)packages\log4net.2.0.3\lib\net40-full\log4net.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xaml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="WindowsBase" />
    <Reference Include="WindowsFormsIntegration" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Constants.cs" />
    <Compile Include="DisplayStateFile.cs" />
    <Compile Include="DynamicKey.cs" />
    <Compile Include="DynamicKeys.cs" />
    <Compile Include="Events\AppEventEventArgs.cs" />
    <Compile Include="Events\DynamicKeyEventArgs.cs" />
    <Compile Include="Events\FlickEventArgs.cs" />
    <Compile Include="Events\GestureEventArgs.cs" />
    <Compile Include="Events\KeyboardCharEventArgs.cs" />
    <Compile Include="Events\KeyboardKeyEventArgs.cs" />
    <Compile Include="Events\KeyboardRawEventArgs.cs" />
    <Compile Include="Events\MoveEventArgs.cs" />
    <Compile Include="Events\PressEventArgs.cs" />
    <Compile Include="Events\ReleaseEventArgs.cs" />
    <Compile Include="Events\RotateEventArgs.cs" />
    <Compile Include="Events\TapEventArgs.cs" />
    <Compile Include="Events\ZoomEventArgs.cs" />
    <Compile Include="Extensions\EnumerationExtensions.cs" />
    <Compile Include="GlobalSuppressions.cs" />
    <Compile Include="Helpers\GenericMethods.cs" />
    <Compile Include="Helpers\ScreenCapture.cs" />
    <Compile Include="Helpers\ThreadingMethods.cs" />
    <Compile Include="Integration\BitmapRenderer.cs" />
    <Compile Include="Integration\EmbeddedWinFormsControl.cs" />
    <Compile Include="Integration\IBitmapProvider.cs" />
    <Compile Include="Integration\IRenderer.cs" />
    <Compile Include="Integration\KeyboardControl.cs" />
    <Compile Include="Integration\NativeRenderer.cs" />
    <Compile Include="Integration\Renderer.cs" />
    <Compile Include="Integration\WinFormsRenderer.cs" />
    <Compile Include="Integration\WpfRenderer.cs" />
    <Compile Include="IRenderTarget.cs" />
    <Compile Include="Logging\LogManager.cs" />
    <Compile Include="ModifierKeys.cs" />
    <Compile Include="Native\HelperMethods.cs" />
    <Compile Include="Native\HRESULT.cs" />
    <Compile Include="Native\WinAPI\GDI32.cs" />
    <Compile Include="Native\WinAPI\Kernel32.cs" />
    <Compile Include="Native\WinAPI\User32.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="DynamicKeyException.cs" />
    <Compile Include="Razer\DynamicKeyCallback.cs" />
    <Compile Include="Razer\KeyboardCallback.cs" />
    <Compile Include="Razer\TouchpadGestureCallback.cs" />
    <Compile Include="SwitchbladeException.cs" />
    <Compile Include="Razer\AppEventType.cs" />
    <Compile Include="Razer\BufferParams.cs" />
    <Compile Include="Razer\Capabilities.cs" />
    <Compile Include="Razer\Constants.cs" />
    <Compile Include="Razer\Direction.cs" />
    <Compile Include="Razer\DynamicKeyState.cs" />
    <Compile Include="Razer\DynamicKeyType.cs" />
    <Compile Include="Razer\GestureTypes.cs" />
    <Compile Include="Razer\HardwareType.cs" />
    <Compile Include="Razer\NativeMethods.cs" />
    <Compile Include="Razer\PixelType.cs" />
    <Compile Include="Razer\AppEventCallback.cs" />
    <Compile Include="Razer\NativeCallException.cs" />
    <Compile Include="Razer\TargetDisplay.cs" />
    <Compile Include="RenderMethod.cs" />
    <Compile Include="RenderTarget.cs" />
    <Compile Include="RotateDirection.cs" />
    <Compile Include="Switchblade.cs" />
    <Compile Include="Touchpad.cs" />
    <Compile Include="ZoomDirection.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Default\Images\dk_disabled.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="Default\Images\tp_blank.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDictionary Include="..\CustomDictionary.xml">
      <Link>CustomDictionary.xml</Link>
    </CodeAnalysisDictionary>
    <None Include="packages.config">
      <SubType>Designer</SubType>
    </None>
    <None Include="SharpBlade.nuspec" />
  </ItemGroup>
  <ItemGroup />
  <PropertyGroup Condition="'$(BUILD_NUMBER)' != ''">
    <AssemblyFilePerformUpdate>True</AssemblyFilePerformUpdate>
    <AssemblyFileBeforeRegex>AssemblyFileVersion\("(\d+)\.(\d+)\.(\d+)\.\d+"\)</AssemblyFileBeforeRegex>
    <AssemblyFileBeforeReplace>AssemblyFileVersion("$1.$2.$3.$(BUILD_NUMBER)")</AssemblyFileBeforeReplace>
    <AssemblyFileRestoreRegex>AssemblyFileVersion\("(\d+)\.(\d+)\.(\d+)\.\d+"\)</AssemblyFileRestoreRegex>
    <AssemblyFileRestoreReplace>AssemblyFileVersion("$1.$2.$3.0")</AssemblyFileRestoreReplace>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Release' AND '$(SharpBladeKeyFile)' != ''">
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>$(SharpBladeKeyFile)</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" Condition="'$(AssemblyFilePerformUpdate)' == 'True'" />
  <Target Name="BeforeBuild" Condition="'$(AssemblyFilePerformUpdate)' == 'True'">
    <Message Text="Updating AssemblyInfo.cs" />
    <FileUpdate Files="Properties\AssemblyInfo.cs" Regex="$(AssemblyFileBeforeRegex)" ReplacementText="$(AssemblyFileBeforeReplace)" />
    <PropertyGroup>
      <AssemblyFileChanged>True</AssemblyFileChanged>
    </PropertyGroup>
  </Target>
  <Target Name="AfterBuild">
    <Message Text="Restoring AssemblyInfo.cs" Condition="'$(AssemblyFileChanged)' == 'True'" />
    <FileUpdate Files="Properties\AssemblyInfo.cs" Regex="$(AssemblyFileRestoreRegex)" ReplacementText="$(AssemblyFileRestoreReplace)" Condition="'$(AssemblyFileChanged)' == 'True'" />
  </Target>
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Import Project="..\packages\StyleCop.MSBuild.4.7.49.0\build\StyleCop.MSBuild.Targets" Condition="Exists('..\packages\StyleCop.MSBuild.4.7.49.0\build\StyleCop.MSBuild.Targets')" />
  <!-- JetBrains.BuildServer.MSBuildLoggers. -->
  <UsingTask TaskName="TeamCitySetStatus" AssemblyFile="C:\TeamCity\buildAgent\plugins\dotnetPlugin\bin\JetBrains.BuildServer.MSBuildLoggers.dll" Condition="'$(TEAMCITY_VERSION)' != ''" />
  <UsingTask TaskName="TeamCityReportStatsValue" AssemblyFile="C:\TeamCity\buildAgent\plugins\dotnetPlugin\bin\JetBrains.BuildServer.MSBuildLoggers.dll" Condition="'$(TEAMCITY_VERSION)' != ''" />
  <Target Name="ReportStyleCopStatsToTC" AfterTargets="StyleCop" Condition="'$(Configuration)' == 'Release' AND '$(TEAMCITY_VERSION)' != '' AND '$(StyleCopEnabled)' != 'false'">
    <Message Text="Reporting StyleCop stats to TeamCity" />
    <PropertyGroup Condition="'$(StyleCopViolationCount)' != '' AND $(StyleCopViolationCount) &gt; 0">
      <TCStatus>ERROR</TCStatus>
      <TCStyleCopViolations>$(StyleCopViolationCount)</TCStyleCopViolations>
      <TCStatusText>Violations: $(TCStyleCopViolations)</TCStatusText>
    </PropertyGroup>
    <PropertyGroup Condition="'$(StyleCopViolationCount)' == '' OR $(StyleCopViolationCount) == 0">
      <TCStatus>SUCCESS</TCStatus>
      <TCStatusText>{build.status.text}; Violations: 0</TCStatusText>
      <TCStyleCopViolations>0</TCStyleCopViolations>
    </PropertyGroup>
    <Message Text="TCStatus is $(TCStatus) and #TCStyleCopViolations is $(TCStyleCopViolations)" />
    <TeamCitySetStatus Status="$(TCStatus)" Text="$(TCStatusText)" Condition="'$(TCStyleCopViolations)' != '' AND '$(TCStatus)' != ''" />
    <TeamCityReportStatsValue Key="StyleCopViolations" Value="$(TCStyleCopViolations)" Condition="'$(TCStyleCopViolations)' != '' AND '$(TCStatus)' != ''" />
  </Target>
</Project>